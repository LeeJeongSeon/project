<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
 <!-- 로그인체크 -->
	<select id="login_check" resultType="String">
		select name
		from member
		where
		userid=#{userid} and passwd=#{passwd}
	</select>



	<!-- 회원가입 -->
	<insert id="insertMember">
		insert into member
		(userid,passwd,name,email,zipcode,address1,address2,phone)
		values
		(#{userid}, #{passwd}, #{name}, #{email}, #{zipcode},
		#{address1},
		#{address2}, #{phone})
	</insert>

	<!-- 회원정보 수정 -->
	<select id="viewMember"
		resultType="com.example.project.model.member.DTO.MemberDTO">
		select * from member
		where userid=#{userid}
	</select>


	<!-- 회원정보 업데이트 -->
	<update id="updateMember">
		update member
		set passwd=#{passwd}, name=#{name},
		email=#{email},
		zipcode=#{zipcode}, address1=#{address1},
		address2=#{address2}, phone=#{phone}
		where userid=#{userid}
	</update>

	<!-- 회원정보 삭제 -->
	<delete id="deleteMember">
		delete from member
		where userid=#{userid}
	</delete>

	<!-- 비밀번호 체크 -->
	<select id="checkPw" resultType="int">
		select count(*) from member
		where userid=#{userid} and passwd=#{passwd}
	</select>

	<!-- 아이디 찾기 -->
	<select id="find_id"
		resultType="com.example.project.model.member.DTO.MemberDTO">
		select userid from member where email = #{email} and name =
		#{name}
	</select>
    <!-- 비밀번호 찾기 -->
	<select id="pwChange" resultType="String">
		select passwd
		from member
		where userid=#{userid} and email=#{email}
	</select>
	
	<!-- 아이디 중복검사 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(userid) from member
		where userid=#{userid}
	</select>
	
	<!-- 비밀번호변경  -->
	<update id="pwUpdate">
		update member
		set passwd=#{passwd}
		where userid=#{userid}
	</update>
 
 
  
 
<!-- 여기서부터 관리자 -->
 
 
 <!-- 회원수 -->
 <select id="countMember" resultType="int">
  select count(*) from member
  <include refid="search"></include>
 </select>

 <sql id="search">
  <choose>
   <when test="search_option != 'all' ">
    where ${search_option} like #{keyword}
   </when>
   <otherwise>
    where ${search_option} like #{keyword}
      and (name like #{keyword} 
       or phone like #{keyword}
       or email like #{keyword})
   </otherwise>
  </choose>
 </sql>

 
 
 <!-- 회원 리스트 -->
  <select id="listMember" resultType="com.example.project.model.member.DTO.MemberDTO">
  <include refid="paging_header" />
		  select userid,name,phone,zipcode,email from member
		  <include refid="search" />
		  <include refid="paging_footer" />
 </select>
 
 <sql id="paging_header">
  select *
  from (
    select rownum as rn, A.* 
    from(
 </sql>
 <sql id="paging_footer">
    ) A
  ) where rn between #{start} and #{end}
 </sql>
 
 
 <!-- 회원정보 -->
  <select id="readMember" resultType="com.example.project.model.member.DTO.MemberDTO">
  select userid,name,email,zipcode,address1,address2,join_date,adminCk
  from member
  where userid=#{userid}
 </select>
 
 <select id="adminCheck" resultType="int">
  select adminCk from member
  where userid = #{userid}
 </select>
 
 
 
</mapper>
